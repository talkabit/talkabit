{"version":3,"sources":["webpack:///./src/components/utils/viewport.js","webpack:///./src/components/schedule/Event.js","webpack:///./src/components/schedule/Schedule.js","webpack:///./src/pages/schedule.js","webpack:///./src/components/schedule/schedule.module.css"],"names":["viewportContext","React","createContext","ViewportProvider","children","useState","window","innerWidth","width","setWidth","innerHeight","height","setHeight","handleWindowResize","useEffect","addEventListener","removeEventListener","Provider","value","useViewport","useContext","EventDetailsSpeaker","speakers","title","description","showPicture","map","speaker","i","key","className","styles","speakerEntry","eventPicture","onClick","navigate","name","replace","fluid","img","childImageSharp","titleAuthor","eventTitle","author","dangerouslySetInnerHTML","__html","PromotedEvent","startTime","endTime","tickets","promotedEvent","time","href","style","color","textDecoration","target","rel","size","Event","slug","promoted","event","promotedInline","eventDetails","viewportUtils","require","DaySchedule","align","eventNodes","promotedEventNodes","date","mobile","daySchedule","dayScheduleDate","dayTitle","dayScheduleLeft","leftAlign","node","frontmatter","fields","type","dayScheduleRight","promotedSection","rightAlign","Schedule","data","useStaticQuery","isMobile","schedule","allMarkdownRemark","group","fieldValue","edges","filter","ResponsiveSchedule","props","Activities","module","exports"],"mappings":"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","file":"component---src-pages-schedule-js-7e9415c7aab448146f23.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from \"react\";\n\nconst viewportContext = React.createContext({});\n\nexport const ViewportProvider = ({ children }) => {\n    // This is the exact same logic that we previously had in our hook\n\n    const [width, setWidth] = React.useState(window.innerWidth);\n    const [height, setHeight] = React.useState(window.innerHeight);\n\n    const handleWindowResize = () => {\n        setWidth(window.innerWidth);\n        setHeight(window.innerHeight);\n    };\n\n    React.useEffect(() => {\n        window.addEventListener(\"resize\", handleWindowResize);\n        return () => window.removeEventListener(\"resize\", handleWindowResize);\n    }, []);\n\n    /* Now we are dealing with a context instead of a Hook, so instead\n     of returning the width and height we store the values in the\n     value of the Provider */\n    return (\n        <viewportContext.Provider value={{ width, height }}>\n            {children}\n        </viewportContext.Provider>\n    );\n};\n\n/* Rewrite the \"useViewport\" hook to pull the width and height values\n   out of the context instead of calculating them itself */\nexport const useViewport = () => {\n    /* We can use the \"useContext\" Hook to acccess a context from within\n     another Hook, remember, Hooks are composable! */\n    const { width, height } = React.useContext(viewportContext);\n    return { width, height };\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SpeakerShape } from \"../../utils/props\";\nimport Img from \"gatsby-image\";\nimport { navigate } from \"@reach/router\";\n\nimport styles from \"./schedule.module.css\";\nimport { ImTicket } from \"react-icons/im\";\n\nconst EventDetailsSpeaker = ({ speakers, title, description, showPicture }) => (\n    <>\n        {showPicture ?\n            (\n                speakers.map((speaker, i) => ( // It's ok to use i as key, since the elements won't change\n                    <div key={i} className={styles.speakerEntry}>\n                        <div className={styles.eventPicture} onClick={() => navigate(`/speakers/#${speaker.name.replace(\" \", \"-\")}`)}>\n                            <Img fluid={speaker.img.childImageSharp.fluid}/>\n                        </div>\n                        <div className={styles.titleAuthor}>\n                            <div className={styles.eventTitle}>\n                                {title}\n                            </div>\n\n                            <div className={styles.author} onClick={() => navigate(`/speakers/#${speaker.name.replace(\" \", \"-\")}`)}>\n                                {speaker.name}\n                            </div>\n                            <div className={styles.description} dangerouslySetInnerHTML={{ __html: description }}/>\n                        </div>\n                    </div>\n                ))\n            )\n            :\n            (\n                <div className={styles.titleAuthor}>\n                    <div className={styles.eventTitle}>\n                        {title}\n                    </div>\n\n                    <div>\n                        {speakers.map((speaker, i) => (\n                            <>\n                                {i > 0 ? \", \" : null}\n                                <span key={speaker.name} className={styles.author} onClick={() => navigate(`/speakers/#${speaker.name.replace(\" \", \"-\")}`)}>\n                                    {speaker.name}\n                                </span>\n                            </>\n                        ))}\n                    </div>\n                </div>\n            )\n        }\n    </>\n);\n\nEventDetailsSpeaker.propTypes = {\n    showPicture: PropTypes.bool,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    speakers: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: SpeakerShape.name,\n            occupations: SpeakerShape.occupations,\n        })\n    ),\n};\n\nconst Event = ({ title, startTime, endTime, speakers, slug, showPicture = true, promoted, tickets }) => (\n    <div className={`${styles.event} ${promoted ? styles.promotedInline : \"\"}`}>\n        <div className={styles.time}>\n            {startTime}\n        </div>\n        <div className={styles.eventDetails}>\n            {speakers && !promoted ?\n                <EventDetailsSpeaker\n                    showPicture={showPicture}\n                    title={title}\n                    startTime={startTime}\n                    endTime={endTime}\n                    speakers={speakers}\n                    slug={slug}\n                />\n                :\n                (\n                    <div className={styles.eventTitle}>\n                        {tickets ?   (\n                            <a href={tickets} style={{ color: \"white\", textDecoration: \"none\" }} className={styles.tickets} target=\"_blank\" rel=\"noreferrer\">\n                                <ImTicket size=\"1.5rem\"/>\n                                <p>\n                                    {title}\n                                </p>\n                            </a>\n                        ) : (\n                            <p>\n                                {title}\n                            </p>\n                        )}\n                    </div>\n                )\n            }\n        </div>\n    </div>\n);\n\nEvent.propTypes = {\n    showPicture: PropTypes.bool,\n    title: PropTypes.string.isRequired,\n    promoted: PropTypes.bool,\n    startTime: PropTypes.string.isRequired,\n    endTime: PropTypes.string.isRequired,\n    speakers: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: SpeakerShape.name,\n            occupations: SpeakerShape.occupations,\n        })\n    ),\n    tickets: PropTypes.string,\n    slug: PropTypes.string,\n};\n\nexport const PromotedEvent = ({ title, startTime, endTime, tickets }) => (\n    <div className={styles.promotedEvent}>\n        <div className={styles.time}>\n            {`${startTime} - ${endTime}`}\n        </div>\n        <div className={styles.title}>\n            {tickets ?   (\n                <a href={tickets} style={{ color: \"white\", textDecoration: \"none\" }} className={styles.tickets} target=\"_blank\" rel=\"noreferrer\">\n                    <ImTicket size=\"1.5rem\"/>\n                    <p>\n                        {title}\n                    </p>\n                </a>\n            ) : (\n                <p>\n                    {title}\n                </p>\n            )}\n        </div>\n    </div>\n);\n\nPromotedEvent.propTypes = {\n    title: PropTypes.string.isRequired,\n    startTime: PropTypes.string.isRequired,\n    endTime: PropTypes.string.isRequired,\n    tickets: PropTypes.string,\n};\n\n\nexport default Event;\n","import { graphql, useStaticQuery } from \"gatsby\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Event, { PromotedEvent } from \"./Event\";\n\nimport styles from \"./schedule.module.css\";\n\nconst MOBILE_BREAKPOINT_PX = 600;\n\n/** ************************************* */\n// This is needed due to the build being executed in the server side, with no browser variables access\n// such as `window`. This will mock the utils that use the window object\n// When it is undefined, to let the build continue\nconst _IS_RUNNING_ON_BROWSER = typeof window !== \"undefined\";\n\n// eslint-disable-next-line react/prop-types\nconst DummyViewportProvider = ({ children }) => (\n    <>\n        {children}\n    </>\n);\nconst viewportUtils = _IS_RUNNING_ON_BROWSER ? require(\"../utils/viewport\")\n    : {\n        useViewport: () => ({ width: 1920, height: 1080 }),\n        ViewportProvider: DummyViewportProvider,\n    };\n\n/** ************************************** */\n\n\nconst DaySchedule = ({ align = \"left\", eventNodes, promotedEventNodes, date, mobile }) => (\n    <div className={styles.daySchedule}>\n        <div className={`${styles.dayScheduleDate} ${styles[`dayScheduleDate_${align}`]}`}>\n            <div className={styles.dayTitle}>\n                <p>\n                    {`${date}`}\n                </p>\n            </div>\n        </div>\n        {align === \"left\" ?\n            (\n                <>\n                    <div className={`${styles.dayScheduleLeft} ${styles.leftAlign}`}>\n                        {eventNodes.map(({ node }) => (\n                            <Event\n                                key={node.frontmatter.title}\n                                {...node.frontmatter}\n                                {...node.fields}\n                                showPicture={node.frontmatter.type !== \"panel\"}\n                            />\n                        ))}\n                    </div>\n                    {!mobile &&\n                    <div className={`${styles.dayScheduleRight} ${styles.promotedSection}`}>\n                        {promotedEventNodes.map(({ node }) => (\n                            <PromotedEvent\n                                key={node.frontmatter.title}\n                                {...node.frontmatter}\n                                {...node.fields}\n                                showPicture={node.frontmatter.type !== \"panel\"}\n                            />\n                        ))}\n                    </div>\n                    }\n                </>\n            )\n            :\n            (\n                <>\n                    {!mobile &&\n                    <div className={`${styles.dayScheduleLeft} ${styles.promotedSection}`}>\n                        {promotedEventNodes.map(({ node }) => (\n                            <PromotedEvent\n                                key={node.frontmatter.title}\n                                {...node.frontmatter}\n                                {...node.fields}\n                                showPicture={node.frontmatter.type !== \"panel\"}\n                            />\n                        ))}\n                    </div>\n                    }\n                    <div className={`${styles.dayScheduleRight} ${styles.rightAlign}`}>\n                        {eventNodes.map(({ node }) => (\n                            <Event\n                                key={node.frontmatter.title}\n                                {...node.frontmatter}\n                                {...node.fields}\n                                showPicture={node.frontmatter.type !== \"panel\"}\n                            />\n                        ))}\n                    </div>\n                </>\n            )\n        }\n    </div>\n);\n\nDaySchedule.propTypes = {\n    align: PropTypes.oneOf([\"left\", \"right\"]),\n    eventNodes: PropTypes.array.isRequired,\n    promotedEventNodes: PropTypes.array,\n    date: PropTypes.string.isRequired,\n    mobile: PropTypes.bool.isRequired,\n};\n\nconst Schedule = () => {\n    const data = useStaticQuery(graphql`\n    {\n      allMarkdownRemark(\n        filter: { fileAbsolutePath: { regex: \"/data/events/\" } }\n        sort: { fields: frontmatter___startTime }\n      ) {\n        group(field: frontmatter___date) {\n          fieldValue\n          edges {\n            node {\n              html\n              fields {\n                slug\n              }\n              frontmatter {\n                title\n                type\n                date(formatString: \"D MMMM\", locale: \"en-US\")\n                startTime\n                endTime\n                promoted\n                tickets\n                speakers {\n                  name\n                  occupations {\n                    what\n                    where\n                  }\n                  img {\n                    childImageSharp {\n                      fluid(maxWidth: 100) {\n                        ...GatsbyImageSharpFluid\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n    const isMobile = viewportUtils.useViewport().width < MOBILE_BREAKPOINT_PX;\n\n    return (\n        <div className={styles.schedule}>\n            {data.allMarkdownRemark.group.map((group, i) => (\n                <DaySchedule\n                    key={group.fieldValue}\n                    align={i % 2 === 0 ? \"left\" : \"right\"}\n                    mobile={isMobile}\n                    eventNodes={group.edges.filter(({ node }) => isMobile || !node.frontmatter.promoted)}\n                    promotedEventNodes={group.edges.filter(({ node }) => node.frontmatter.promoted)}\n                    date={group.edges[0].node.frontmatter.date}\n                />\n            ))}\n        </div>\n    );\n};\n\nconst ResponsiveSchedule = (props) => (\n\n    <viewportUtils.ViewportProvider>\n        <Schedule {...props}/>\n    </viewportUtils.ViewportProvider>\n\n);\n\nexport default ResponsiveSchedule;\n","import React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport Schedule from \"../components/schedule/Schedule\";\n\nconst Activities = () => (\n    <Layout title=\"Schedule\">\n        <Seo title=\"Schedule\" />\n        <Schedule />\n    </Layout>\n);\n\nexport default Activities;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"schedule\":\"schedule-module--schedule--1OxkL\",\"event\":\"schedule-module--event--2TVbN\",\"eventTitle\":\"schedule-module--eventTitle---5afr\",\"promotedInline\":\"schedule-module--promotedInline--1wShz\",\"tickets\":\"schedule-module--tickets--12A_1\",\"author\":\"schedule-module--author--3AihI\",\"eventPicture\":\"schedule-module--eventPicture--1Icbb\",\"speakerEntry\":\"schedule-module--speakerEntry--1VfFK\",\"daySchedule\":\"schedule-module--daySchedule--1OB70\",\"dayScheduleLeft\":\"schedule-module--dayScheduleLeft--2n7IX\",\"leftAlign\":\"schedule-module--leftAlign--3u6S5\",\"dayScheduleRight\":\"schedule-module--dayScheduleRight--EU0Xf\",\"rightAlign\":\"schedule-module--rightAlign--zrAEl\",\"dayScheduleDate\":\"schedule-module--dayScheduleDate--13Joh\",\"promotedSection\":\"schedule-module--promotedSection--1hS-m\",\"dayTitle\":\"schedule-module--dayTitle--XiWSl\",\"dayScheduleDate_right\":\"schedule-module--dayScheduleDate_right--zeCtZ\",\"promotedEvent\":\"schedule-module--promotedEvent--48Xu4\",\"time\":\"schedule-module--time--1Qens\",\"title\":\"schedule-module--title--84cfm\"};"],"sourceRoot":""}