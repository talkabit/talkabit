{"version":3,"sources":["webpack:///./src/styles/speakers.module.css","webpack:///./src/components/speaker/speaker.js","webpack:///./src/components/speaker/SpeakerList.js","webpack:///./src/pages/speakers.js","webpack:///./src/components/utils/ListItem.js"],"names":["module","exports","Speaker","name","bio","img","date","startTime","role","id","replace","ListItem","className","styles","start","speakerBio","SpeakerList","list","speakers","map","node","frontmatter","edge","key","item","Speakers","data","useStaticQuery","title","allMarkdownRemark","edges","filter","type","Title","ImageContainer","classnames","speakerImgContainer","childImageSharp","fluid","speakerImg","fixed","jointName","jointWebsite","children","link","lines","speaker","href","target","rel","style","zIndex","speakerInfo","speakerName","i"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,SAAW,mCAAmC,KAAO,+BAA+B,KAAO,+BAA+B,QAAU,kCAAkC,cAAgB,yCAAyC,oBAAsB,8CAA8C,WAAa,qCAAqC,YAAc,sCAAsC,YAAc,sCAAsC,MAAQ,gCAAgC,WAAa,qCAAqC,MAAQ,kC,iKCmBliBC,EAfC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAKC,EAAd,EAAcA,IAAKC,EAAnB,EAAmBA,KAAMC,EAAzB,EAAyBA,UAAWC,EAApC,EAAoCA,KAApC,OACZ,yBAAKC,GAAIN,EAAKO,QAAQ,IAAK,MACvB,kBAACC,EAAA,EAAD,CAAUR,KAAMA,EAAME,IAAKA,GACvB,uBAAGO,UAAWC,IAAOC,OAChBN,GAAiBF,EAAb,MAAuBC,GAEhC,uBAAGK,UAAWC,IAAOE,YAChBX,MCeFY,EApBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,wBAAIL,UAAWC,IAAOK,UACjBD,EACIE,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACDA,EAAKC,YAAYH,SAASC,KAAI,SAACG,GAAD,OAC1B,wBAAIC,IAAKD,EAAKnB,KAAMS,UAAWC,IAAOW,MAClC,kBAAC,EAAD,iBACQF,EACAF,EAAKC,uBC6CtBI,UAnDE,WACb,IAAMC,EAAOC,yBAAe,aAkC5B,OACI,kBAAC,IAAD,CAAQC,MAAM,YACV,kBAAC,IAAD,CAAKA,MAAM,aACX,kBAAC,EAAD,CACIX,KAAMS,EAAKG,kBAAkBC,MACxBC,QAAO,kBAAwC,SAAxC,EAAGX,KAAgBC,YAAYW,UAE/C,kBAACC,EAAA,EAAD,CAAOL,MAAM,cACb,kBAAC,EAAD,CACIX,KAAMS,EAAKG,kBAAkBC,MACxBC,QAAO,kBAAwC,UAAxC,EAAGX,KAAgBC,YAAYW,a,kCCtD3D,wFAqDME,EAAiB,SAAC,GAAD,IAAG7B,EAAH,EAAGA,IAAH,OACnB,yBAAKO,UAAWuB,IAAWtB,IAAOuB,sBAC7B/B,EAAIgC,gBAAgBC,MACjB,kBAAC,IAAD,CAAKA,MAAOjC,EAAIgC,gBAAgBC,MAAO1B,UAAWC,IAAO0B,aAEzD,kBAAC,IAAD,CAAKC,MAAOnC,EAAIgC,gBAAgBG,MAAO5B,UAAWC,IAAO0B,eA6BtD5B,IAhFE,SAAC,GAAD,IACbR,EADa,EACbA,KACAsC,EAFa,EAEbA,UACAC,EAHa,EAGbA,aACArC,EAJa,EAIbA,IACAsC,EALa,EAKbA,SACAC,EANa,EAMbA,KACAhC,EAPa,EAObA,UAPa,OASb,yBAAKA,UAAWuB,IAAWtB,IAAOgC,MAAOhC,IAAOiC,QAASlC,IACpDgC,EACG,uBAAGG,KAAMH,EAAMI,OAAO,SAASC,IAAI,aAAaC,MAAO,CAAEC,OAAQ,IAC7D,kBAACjB,EAAD,CAAgB7B,IAAKA,KAGzB,kBAAC6B,EAAD,CAAgB7B,IAAKA,IAEzB,yBAAKO,UAAWC,IAAOuC,aACnB,wBAAIxC,UAAWC,IAAOwC,aACjBZ,EACGA,EAAUtB,KAAI,SAAChB,EAAMmD,GAAP,OACV,oCACKA,EAAI,EAAI,MAAQ,KACjB,uBAAG/B,IAAKpB,EAAM4C,KAAML,EAAaY,GAAI1C,UAAWC,IAAO+B,KAAMI,OAAO,SAASC,IAAI,cAC5E9C,OAIbyC,EACA,uBACIG,KAAMH,EACNI,OAAO,SACPC,IAAI,aACJrC,UAAWC,IAAO+B,MAEjBzC,GAGLA,GAGPwC","file":"component---src-pages-speakers-js-2589f5414327554279a6.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"speakers\":\"speakers-module--speakers--3Buks\",\"item\":\"speakers-module--item--2NCj1\",\"link\":\"speakers-module--link--2j4Ct\",\"speaker\":\"speakers-module--speaker--3SkB2\",\"speakerSecond\":\"speakers-module--speaker-second--2o7XI\",\"speakerImgContainer\":\"speakers-module--speakerImgContainer--1-Pn4\",\"speakerImg\":\"speakers-module--speakerImg--1DgqH\",\"speakerInfo\":\"speakers-module--speakerInfo--oxG4k\",\"speakerName\":\"speakers-module--speakerName--2voJg\",\"start\":\"speakers-module--start--11tL5\",\"speakerBio\":\"speakers-module--speakerBio--MxQAC\",\"lines\":\"speakers-module--lines--1aznB\"};","import React from \"react\";\nimport { SpeakerPageShape } from \"../../utils/props\";\nimport styles from \"../../styles/speakers.module.css\";\nimport ListItem from \"../utils/ListItem\";\n\nconst Speaker = ({ name, bio, img, date, startTime, role }) => (\n    <div id={name.replace(\" \", \"-\")}>\n        <ListItem name={name} img={img}>\n            <p className={styles.start}>\n                {role ? role : `${date} - ${startTime}`}\n            </p>\n            <p className={styles.speakerBio}>\n                {bio}\n            </p>\n        </ListItem>\n    </div>\n);\n\nSpeaker.propTypes = SpeakerPageShape;\n\nexport default Speaker;\n","import React from \"react\";\nimport Speaker from \"./speaker\";\nimport PropTypes from \"prop-types\";\nimport styles from \"../../styles/speakers.module.css\";\nimport { SpeakerPageShape } from \"../../utils/props\";\n\n\nconst SpeakerList = ({ list }) => (\n    <ul className={styles.speakers}>\n        {list\n            .map(({ node }) =>\n                node.frontmatter.speakers.map((edge) => (\n                    <li key={edge.name} className={styles.item}>\n                        <Speaker\n                            {...edge}\n                            {...node.frontmatter}\n                        />\n                    </li>\n                ))\n            )}\n    </ul>\n);\n\nSpeakerList.propTypes = {\n    list: PropTypes.arrayOf(PropTypes.shape({ SpeakerPageShape })),\n};\n\nexport default SpeakerList;\n","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n\nimport Title from \"../components/common/Title\";\nimport SpeakerList from \"../components/speaker/SpeakerList\";\n\nconst Speakers = () => {\n    const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        filter: {\n          fileAbsolutePath: { regex: \"/data/events/\" }\n          frontmatter: { type: { regex: \"/talk|panel/\" } }\n        }\n        sort: { fields: [frontmatter___date, frontmatter___startTime] }\n      ) {\n        edges {\n          node {\n            frontmatter {\n              type\n              date(formatString: \"D MMM\", locale: \"en-US\")\n              startTime\n              speakers {\n                name\n                bio\n                role\n                img {\n                  childImageSharp {\n                    fluid(maxWidth: 400, maxHeight: 400) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n    return (\n        <Layout title=\"Speakers\">\n            <Seo title=\"Speakers\" />\n            <SpeakerList\n                list={data.allMarkdownRemark.edges\n                    .filter(({ node }) => node.frontmatter.type === \"talk\")}\n            />\n            <Title title=\"Panelists\"/>\n            <SpeakerList\n                list={data.allMarkdownRemark.edges\n                    .filter(({ node }) => node.frontmatter.type === \"panel\")}\n            />\n        </Layout>\n    );\n};\n\nexport default Speakers;\n","/* eslint-disable no-nested-ternary */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Img from \"gatsby-image\";\nimport classnames from \"classnames\";\nimport styles from \"../../styles/speakers.module.css\";\n\nconst ListItem = ({\n    name,\n    jointName,\n    jointWebsite,\n    img,\n    children,\n    link,\n    className,\n}) => (\n    <div className={classnames(styles.lines, styles.speaker, className)}>\n        {link ? (\n            <a href={link} target=\"_blank\" rel=\"noreferrer\" style={{ zIndex: 2 }}>\n                <ImageContainer img={img} />\n            </a>\n        ) : (\n            <ImageContainer img={img} />\n        )}\n        <div className={styles.speakerInfo}>\n            <h2 className={styles.speakerName}>\n                {jointName ? (\n                    jointName.map((name, i) => (\n                        <>\n                            {i > 0 ? \" + \" : null}\n                            <a key={name} href={jointWebsite[i]} className={styles.link} target=\"_blank\" rel=\"noreferrer\">\n                                {name}\n                            </a>\n                        </>\n                    ))\n                ) : link ? (\n                    <a\n                        href={link}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        className={styles.link}\n                    >\n                        {name}\n                    </a>\n                ) : (\n                    name\n                )}\n            </h2>\n            {children}\n        </div>\n    </div>\n);\n\nconst ImageContainer = ({ img }) => (\n    <div className={classnames(styles.speakerImgContainer)}>\n        {img.childImageSharp.fluid ? (\n            <Img fluid={img.childImageSharp.fluid} className={styles.speakerImg} />\n        ) : (\n            <Img fixed={img.childImageSharp.fixed} className={styles.speakerImg} />\n        )}\n    </div>\n);\n\nImageContainer.propTypes = {\n    img: PropTypes.shape({\n        childImageSharp: PropTypes.shape({\n            fluid: PropTypes.object,\n            fixed: PropTypes.object,\n        }),\n    }).isRequired,\n};\n\nListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    img: PropTypes.shape({\n        childImageSharp: PropTypes.shape({\n            fluid: PropTypes.object,\n            fixed: PropTypes.object,\n        }),\n    }).isRequired,\n    children: PropTypes.node.isRequired,\n    link: PropTypes.string,\n    className: PropTypes.string,\n    jointName: PropTypes.arrayOf(PropTypes.string),\n    jointWebsite: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default ListItem;\n"],"sourceRoot":""}